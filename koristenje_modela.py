# -*- coding: utf-8 -*-
"""koristenje_modela.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IF9YjENkZQhywp_iTymtcOZ1Mpl-HNkE
"""

import tensorflow as tf # Import tensorflow library
import matplotlib.pyplot as plt # Import matplotlib library
import numpy as np
import os
import cv2

from tensorflow.keras.models import Sequential, save_model, load_model
filepath = F"/content/drive/My Drive/saved_model"
model = load_model(filepath, compile = True)

"""Slike napravljene u Paintu"""

image_number=1
while os.path.isfile(f"/content/drive/MyDrive/digits/digit{image_number}.png"):
  try:
    img = cv2.imread(f"/content/drive/MyDrive/digits/digit{image_number}.png")[:,:,0]
    img = np.array([img])
    img = tf.keras.utils.normalize(img, axis=1)
    predictions = model.predict(img)
    print(f"This digit is probably a {np.argmax(predictions)}")
    plt.imshow(img[0], cmap="gray")
    plt.show()  
  except:
    print("Error!")
  finally:
    image_number += 1

originalImage = cv2.imread("/content/drive/MyDrive/Brojevi_pisani/digit5.jpg")#[:,:,0]
grayImage = cv2.cvtColor(originalImage, cv2.COLOR_BGR2GRAY)
(thresh, blackAndWhiteImage) = cv2.threshold(grayImage, 140, 255, cv2.THRESH_BINARY)
img=blackAndWhiteImage
img = np.invert(np.array([img]))
#img = tf.keras.utils.normalize(img, axis=1)
predictions = model.predict(img)
print(f"This digit is probably a {np.argmax(predictions)}")
plt.imshow(img[0], cmap="gray")
plt.show()

"""Za slike pune rezolucije

"""

originalImage = cv2.imread("/content/drive/MyDrive/Brojevi_pisani/digit12.jpg")#[:,:,0]
width = 28
height = 28
dim = (width, height)
resized = cv2.resize(originalImage, dim, interpolation = cv2.INTER_AREA)
grayImage = cv2.cvtColor(resized, cv2.COLOR_BGR2GRAY)
(thresh, blackAndWhiteImage) = cv2.threshold(grayImage,120, 255, cv2.THRESH_BINARY)
img=blackAndWhiteImage
img = tf.keras.utils.normalize(img, axis=1)
img = np.invert(np.array([img]))
#img = tf.keras.utils.normalize(img, axis=1)
predictions = model.predict(img)
print(f"This digit is probably a {np.argmax(predictions)}")
plt.imshow(img[0], cmap="gray")
plt.show()